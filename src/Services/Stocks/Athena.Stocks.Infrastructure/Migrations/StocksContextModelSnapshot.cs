// <auto-generated />
using System;
using Athena.Stocks.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Athena.Stocks.Infrastructure.Migrations
{
    [DbContext(typeof(StocksContext))]
    partial class StocksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Athena.BuildingBlocks.Application.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccurredOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessages", "stocks");
                });

            modelBuilder.Entity("Athena.BuildingBlocks.Infrastructure.Inbox.InboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccurredOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InboxMessages", "stocks");
                });

            modelBuilder.Entity("Athena.BuildingBlocks.Infrastructure.InternalCommands.InternalCommand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnqueueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("InternalCommands", "stocks");
                });

            modelBuilder.Entity("Athena.Stocks.Domain.StockExchanges.StockExchange", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_exchangeCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("ExchangeCode");

                    b.Property<string>("_name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("StockExchanges", "stocks");
                });

            modelBuilder.Entity("Athena.Stocks.Domain.Stocks.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_companyName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CompanyName");

                    b.Property<decimal>("_forwardPeRatio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ForwardPeRatio");

                    b.Property<Guid>("_stockExchangeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StockExchangeId");

                    b.Property<string>("_symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Symbol");

                    b.HasKey("Id");

                    b.HasIndex("_stockExchangeId");

                    b.ToTable("Stocks", "stocks");
                });

            modelBuilder.Entity("Athena.Stocks.Domain.Stocks.Stock", b =>
                {
                    b.HasOne("Athena.Stocks.Domain.StockExchanges.StockExchange", null)
                        .WithMany()
                        .HasForeignKey("_stockExchangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Athena.Stocks.Domain.Stocks.MoneyValue", "_marketCap", b1 =>
                        {
                            b1.Property<Guid>("StockId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasColumnName("MarketCapCurrency");

                            b1.Property<decimal?>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("MarketCapValue");

                            b1.HasKey("StockId");

                            b1.ToTable("Stocks");

                            b1.WithOwner()
                                .HasForeignKey("StockId");
                        });

                    b.OwnsOne("Athena.Stocks.Domain.Stocks.MoneyValue", "_totalRevenue", b1 =>
                        {
                            b1.Property<Guid>("StockId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasColumnName("TotalRevenueCurrency");

                            b1.Property<decimal?>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("TotalRevenueValue");

                            b1.HasKey("StockId");

                            b1.ToTable("Stocks");

                            b1.WithOwner()
                                .HasForeignKey("StockId");
                        });

                    b.Navigation("_marketCap");

                    b.Navigation("_totalRevenue");
                });
#pragma warning restore 612, 618
        }
    }
}
